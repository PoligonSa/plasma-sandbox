name: Publish Canary

on:
  pull_request:
    branches:
      - dev
      - main

jobs:
  release:
    name: Publish Canary
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Unset header
        # https://github.com/intuit/auto/issues/1030
        run: git config --local --unset http.https://github.com/.extraheader

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install
        run: |
          npm ci --no-audit

      - name: Install
        shell: bash
        run: |
          function get() {
            v=$( ( echo "$2" | jq --arg name "$1" -r -c '.[] | select( .name == $name ) | .version' ) )
            echo $v
            echo "$1@$v"
          }
          
          lerna_ls=$(npx lerna ls --json)
          core=$(get "plasmax-core" $lerna_ls)
          echo "The result is: $core"
          npm i --no-progress --no-audit $core --prefix="./utils/plasma-pack"

      - name: Lerna found changed packages
        run: |
          lerna=$(npx lerna changed || echo "$?")
          echo #lerna
          if [[ $lerna -eq 0 ]]
            then
              echo "LERNA_CHANGED=true" >> $GITHUB_ENV
            else
              echo "LERNA_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: test
        run: |
          echo "LERNA_CHANGED -> ${{ env.LERNA_CHANGED }}"

      - name: Lerna bootstrap
        if: ${{ env.LERNA_CHANGED == true }}
        run: npx lerna bootstrap

      - name: Release Info
        if: ${{ env.LERNA_CHANGED == true }}
        run: npm whoami && npx lerna info && npx auto info || echo 'auto info returned 1'

      - name: Create Release
        if: ${{ env.LERNA_CHANGED }}
        run: npm run release

      - name: Update package-lock files
        if: ${{ env.LERNA_CHANGED == true && inputs.with-update-package-lock }}
        uses: ./.github/actions/update-package-lock
        with:
          commit-message: ${{ inputs.commit-message }}
          token: ${{ secrets.gh_token }}
          stage: ${{ inputs.stage }}
